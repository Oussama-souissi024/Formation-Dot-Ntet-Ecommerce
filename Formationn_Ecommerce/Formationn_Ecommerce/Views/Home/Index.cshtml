@using Formationn_Ecommerce.Models.Home
@model IEnumerable<HomeProductViewModel>

<style>
    .product-card {
        height: 500px;
        margin-bottom: 20px;
    }
    
    .card {
        height: 100%;
        display: flex;
        flex-direction: column;
    }
    
    .product-image-container {
        height: 200px;
        overflow: hidden;
        display: flex;
        align-items: center;
        justify-content: center;
    }
    
    .product-image {
        max-height: 100%;
        max-width: 100%;
        object-fit: contain;
    }
    
    .product-title {
        height: 60px;
        overflow: hidden;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
    }
    
    .product-description {
        height: 80px;
        overflow: hidden;
        text-overflow: ellipsis;
        display: -webkit-box;
        -webkit-line-clamp: 4;
        -webkit-box-orient: vertical;
    }
    
    .card-body {
        flex: 1;
        display: flex;
        flex-direction: column;
    }
    
    .actions-container {
        margin-top: auto;
    }
</style>

<form method="post">
    <div class="container">
        <div class="row">
            @foreach (var product in Model)
            {
                <div class="col-12 col-md-4 col-lg-4 product-card">
                    <div class="card shadow h-100">
                        <h3 class="card-title text-white-50 text-center py-2 product-title">@product.Name</h3>
                        <div class="product-image-container">
                            <img src="@Url.Content("~/images/products/" + product.ImageUrl)" class="product-image" alt="@product.Name" />
                        </div>
                        <div class="card-body">
                            <div class="d-flex justify-content-between py-2">
                                <span class="text-danger" style="font-size:20px;">@string.Format("{0:c}", product.Price)</span>
                                <span class="badge bg-warning text-white p-2">@product.CategoryName</span>
                            </div>
                            <p class="card-text product-description">@Html.Raw(product.Description)</p>
                            <div class="actions-container">
                                <a asp-action="ProductDetails" asp-route-productId="@product.Id"
                                   class="btn btn-success form-control">Details</a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</form>